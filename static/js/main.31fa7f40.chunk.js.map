{"version":3,"sources":["context/todoContext.tsx","context/categoryContext.tsx","common/TodoCard.tsx","dialog/AddModel.tsx","screens/TodoScreen.tsx","model/mode.ts","dialog/AddCategoryModel.tsx","dialog/DeleteModel.tsx","common/NavBar.tsx","screens/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TodoContext","createContext","TodoProvider","children","useState","todos","setTodos","useEffect","_todos","localStorage","getItem","JSON","parse","updateCache","setItem","stringify","Provider","value","add","newTodo","id","uuidv4","deleteById","_todo","find","t","index","indexOf","splice","getByCategory","categoryId","filter","category","deleteByCategory","CategoryContext","CategoryProvider","categories","setCategories","useContext","_categories","newCategory","_category","useStyles","makeStyles","cardContent","minHeight","position","backgroundColor","deleteBtn","top","right","color","TodoCard","todo","onDelete","classes","Card","variant","CardContent","className","Grid","container","spacing","xs","item","Icon","icon","name","onClick","AddTodoModel","open","handleClose","onAdd","history","useHistory","setName","setCategory","c","push","Dialog","onClose","length","DialogTitle","DialogContent","FormControl","TextField","autoFocus","margin","onChange","event","target","label","type","fullWidth","InputLabel","Select","labelId","map","key","MenuItem","style","fontSize","DialogActions","Button","disabled","undefined","root","textAlign","addButton","bottom","TodoScreen","search","useLocation","setCategoryId","setOpen","filteredTodo","setFilteredTodo","allTodo","_categoryId","URLSearchParams","get","getTodo","byCategory","sm","onRemove","Fab","AddModel","newToDo","CategoryIcon","AddCategoryModel","setIcon","DeleteModel","keepMounted","DialogContentText","drawerWidth","theme","addBtn","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","NavBar","deleteModelOpen","setDeleteModelOpen","deletingCategory","setDeletingCategory","addModelOpen","setAddModelOpen","AppBar","clsx","Toolbar","IconButton","edge","Typography","noWrap","Drawer","paper","Divider","List","ListItem","button","component","Link","to","onDoubleClick","ListItemIcon","ListItemText","primary","content","flexGrow","Home","path","CssBaseline","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31fa7f40.chunk.js","sourcesContent":["import React, {createContext, useEffect, useState} from \"react\";\nimport {Todo} from \"../model/mode\";\nimport {v4 as uuidv4} from 'uuid';\n\ntype TodoContextType = {\n    todos: Todo[]\n    add: (newTodo: Todo) => Todo\n    deleteById: (id: string) => void\n    getByCategory: (categoryId: string) => Todo[]\n    deleteByCategory: (categoryId: string) => Todo[]\n};\n\n// @ts-ignore\nexport const TodoContext = createContext<TodoContextType>();\n\nconst TodoProvider: React.FC<React.ReactNode> = ({children}) => {\n    const [todos, setTodos] = useState<Todo[]>([]);\n\n    useEffect(() => {\n        const _todos = localStorage.getItem('todos');\n        if (_todos){\n            setTodos(JSON.parse(_todos))\n        }\n    }, []);\n\n    useEffect(() => {\n        updateCache()\n    }, [todos]);\n\n\n    const add = (newTodo: Todo): Todo => {\n        newTodo.id = uuidv4();\n        setTodos([...todos, newTodo]);\n        return newTodo\n    }\n\n    const getByCategory = (categoryId: string): Todo[] => {\n        return todos.filter(t => t.category.id === categoryId);\n    }\n\n    const deleteByCategory = (categoryId: string): Todo[] => {\n        const _todos = todos.filter(t => t.category.id !== categoryId);\n        setTodos([..._todos])\n        return _todos\n    }\n\n    const deleteById = (id: string) => {\n        const _todos = todos;\n\n        const _todo = _todos.find(t => t.id === id);\n        if (_todo) {\n            const index = _todos.indexOf(_todo);\n            _todos.splice(index, 1);\n        }\n        setTodos([..._todos]);\n    }\n\n    const updateCache = () => {\n        localStorage.setItem('todos', JSON.stringify(todos));\n    };\n\n    return (\n        <TodoContext.Provider value={{todos, add, deleteById, getByCategory, deleteByCategory}}>\n            {children}\n        </TodoContext.Provider>\n    );\n};\nexport default TodoProvider;\n","import React, {createContext, useContext, useEffect, useState} from \"react\";\nimport {Category} from \"../model/mode\";\nimport {v4 as uuidv4} from 'uuid';\nimport {TodoContext} from \"./todoContext\";\n\n\ntype CategoryContextType = {\n    categories: Category[]\n    add: (newCategory: Category) => void\n    deleteById: (id: string) => void\n};\n\n// @ts-ignore\nexport const CategoryContext = createContext<CategoryContextType>();\n\nconst CategoryProvider: React.FC<React.ReactNode> = ({children}) => {\n    const [categories, setCategories] = useState<Category[]>([]);\n    const {deleteByCategory} = useContext(TodoContext);\n\n    useEffect(() => {\n        const _categories = localStorage.getItem('categories');\n        if (_categories) {\n            setCategories(JSON.parse(_categories))\n        }\n    }, []);\n\n    useEffect(() => {\n        updateCache()\n    }, [categories]);\n\n    const add = (newCategory: Category) => {\n        newCategory.id = uuidv4();\n        setCategories([...categories, newCategory]);\n    }\n\n    const deleteById = (id: string) => {\n        const _categories = categories;\n        const _category = _categories.find(t => t.id === id);\n        if (_category) {\n            const index = _categories.indexOf(_category);\n            _categories.splice(index, 1);\n            deleteByCategory(id);\n        }\n        setCategories([..._categories]);\n    }\n\n    const updateCache = () => {\n        localStorage.setItem('categories', JSON.stringify(categories));\n    };\n\n    return (\n        <CategoryContext.Provider value={{categories, add, deleteById}}>\n            {children}\n        </CategoryContext.Provider>\n    );\n}\nexport default CategoryProvider;\n","import React from \"react\";\nimport {Todo} from \"../model/mode\";\nimport {Card, CardContent, Grid, Icon, makeStyles} from \"@material-ui/core\";\n\ninterface TodoCartType {\n    todo: Todo;\n    onDelete: () => void\n}\n\nconst useStyles = makeStyles(() => ({\n    cardContent: {\n        minHeight: \"5rem\",\n        position: \"relative\",\n        backgroundColor: \"#e6ecfa\"\n    },\n    deleteBtn: {\n        position: \"absolute\",\n        top: '-0.1rem',\n        right: '-0.1rem',\n        color: '#82142d'\n    },\n}));\n\nconst TodoCard: React.FC<TodoCartType> = ({todo, onDelete}) => {\n    const classes = useStyles();\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent className={classes.cardContent}>\n                <Grid  container spacing={2}>\n                    <Grid xs={2} item={true}><Icon color={\"primary\"}>{todo.category.icon}</Icon></Grid>\n                    <Grid xs={8} item={true}>{todo.name}</Grid>\n                    <Icon className={classes.deleteBtn} onClick={() => onDelete()}>close</Icon>\n                </Grid>\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default TodoCard\n","import React, {useContext, useEffect, useState} from \"react\";\nimport {CategoryContext} from \"../context/categoryContext\";\nimport {useHistory} from \"react-router-dom\";\nimport {Category, Todo} from \"../model/mode\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    Icon,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\";\n\ninterface AddTodoModelPropsType {\n    open: boolean,\n    handleClose: () => void,\n    onAdd: (todo: Todo) => void,\n    categoryId: string | null\n}\n\nconst AddTodoModel: React.FC<AddTodoModelPropsType> = ({open, handleClose, onAdd, categoryId}) => {\n    const {categories} = useContext(CategoryContext);\n    const history = useHistory();\n    const [name, setName] = useState('');\n    const [category, setCategory] = useState<Category>();\n\n    useEffect(() => {\n        let _category = categories.find(c => c.id === categoryId);\n        if (_category) {\n            setCategory(_category);\n        } else {\n            let path = `todo`;\n            history.push(path);\n        }\n    }, [categories, categoryId, history])\n\n    const onSave = () => {\n        if (name !== '' && category) {\n            onAdd({name, category});\n            setName('');\n            handleClose();\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            {categories.length > 0 && <>\n                <DialogTitle id=\"form-dialog-title\">New Todo</DialogTitle>\n                <DialogContent>\n                    <FormControl>\n                        <TextField\n                            variant=\"outlined\"\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            value={name}\n                            onChange={event => setName(event.target.value)}\n                            label=\"Title\"\n                            type=\"text\"\n                            fullWidth\n                        />\n                    </FormControl>\n                    <br/>\n                    <br/>\n                    {!categoryId &&\n                    <FormControl variant=\"outlined\" fullWidth>\n                        <InputLabel id=\"icon-label\">Category</InputLabel>\n                        <Select\n                            variant=\"filled\"\n                            labelId=\"icon-label\"\n                            onChange={event => (setCategory(categories[(event.target.value as number)]))}\n                        >\n                            {categories.map((category, key) => <MenuItem value={key} key={key}>\n                                <Icon style={{fontSize: '1rem'}}\n                                      color=\"secondary\">{category.icon}</Icon>&nbsp;{category.name}\n                            </MenuItem>)}\n\n                        </Select>\n                    </FormControl>\n                    }\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button disabled={name === '' || category === undefined} onClick={onSave} variant=\"contained\"\n                            color=\"primary\">\n                        Add\n                    </Button>\n                </DialogActions>\n            </>}\n            {categories.length === 0 && <>\n                <DialogContent id=\"form-dialog-title\">No category available <br/> Add category first</DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                </DialogActions>\n            </>}\n        </Dialog>\n\n    )\n}\n\nexport default AddTodoModel\n","import React, {useContext, useEffect, useState} from 'react';\nimport {Fab, Grid, makeStyles} from \"@material-ui/core\";\nimport AddIcon from '@material-ui/icons/Add';\nimport {TodoContext} from \"../context/todoContext\";\nimport {Todo} from \"../model/mode\";\nimport {useLocation} from 'react-router-dom';\nimport TodoCard from \"../common/TodoCard\";\nimport AddModel from \"../dialog/AddModel\";\n\nconst useStyles = makeStyles(() => ({\n    root: {textAlign: \"center\"},\n    addButton: {\n        position: \"fixed\",\n        bottom: \"2rem\",\n        right: '2rem'\n    },\n}));\n\nconst TodoScreen = () => {\n    const search = useLocation().search;\n    const classes = useStyles();\n    const [categoryId, setCategoryId] = useState<string | null>('');\n    const [open, setOpen] = useState(false);\n    const [filteredTodo, setFilteredTodo] = useState<Todo[]>([]);\n\n    const {todos: allTodo, deleteById, getByCategory, add} = useContext(TodoContext);\n    useEffect(() => {\n        const _categoryId = new URLSearchParams(search).get('category')\n        setCategoryId(_categoryId);\n    }, [search]);\n\n    useEffect(() => {\n        getTodo()\n    }, [categoryId])\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const getTodo = () => {\n        if (categoryId) {\n            let byCategory = getByCategory(categoryId);\n            setFilteredTodo(byCategory)\n        } else {\n            setFilteredTodo(allTodo);\n        }\n    }\n    const onRemove = (todo: Todo) => {\n        deleteById(todo.id!)\n        getTodo()\n    }\n    const onAdd = (todo: Todo) => {\n        let newToDo = add(todo);\n        setFilteredTodo([...filteredTodo, newToDo])\n    }\n    return (\n\n        <div className={classes.root}>\n            {filteredTodo.length === 0 && <span>Add new todo</span>}\n            <Grid container spacing={2}>\n                {filteredTodo.map((todo) => <Grid key={todo.id} item sm={4}>\n                    <TodoCard todo={todo}\n                              onDelete={() => onRemove(todo)}/></Grid>)}\n            </Grid>\n            <Fab onClick={handleClickOpen} className={classes.addButton} color=\"primary\" aria-label=\"add\">\n                <AddIcon/>\n            </Fab>\n            <AddModel categoryId={categoryId} open={open} handleClose={handleClose} onAdd={(t: Todo) => onAdd(t)}/>\n        </div>\n    );\n}\nexport default TodoScreen\n","export interface Todo {\n    id?: string\n    name: string;\n    category: Category;\n}\n\nexport interface Category {\n    id?: string\n    name: string\n    icon: string;\n}\n\nexport const CategoryIcon: string[] = [\n    'add_circle',\n    'face',\n    'help',\n    'note',\n    'subject',\n    'call_made',\n    'event_note',\n    'label', 'send',\n    'assignment',\n    'label_important',\n]\n","import React, {useContext, useState} from \"react\";\nimport {CategoryContext} from \"../context/categoryContext\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    FormControl,\n    Icon,\n    InputLabel,\n    MenuItem,\n    Select,\n    TextField\n} from \"@material-ui/core\";\nimport {CategoryIcon} from \"../model/mode\";\n\ninterface AddCategoryModelPropsType {\n    open: boolean,\n    handleClose: () => void\n}\n\nconst AddCategoryModel: React.FC<AddCategoryModelPropsType> = ({open, handleClose}: any) => {\n    const {add} = useContext(CategoryContext);\n    const [name, setName] = useState('');\n    const [icon, setIcon] = useState<string>('');\n\n    const onSave = () => {\n        if (icon !== '' && name !== '') {\n            add({name, icon});\n            setName('');\n            setIcon('');\n            handleClose();\n        }\n    };\n\n    return (\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">New category</DialogTitle>\n            <DialogContent>\n                <FormControl>\n                    <TextField\n                        variant='outlined'\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        value={name}\n                        onChange={event => setName(event.target.value)}\n                        label=\"Name\"\n                        type=\"text\"\n                    />\n                </FormControl>\n                <FormControl variant='outlined'>\n                    <InputLabel id=\"icon-label\">Icon</InputLabel>\n                    <Select\n                        labelId=\"icon-label\"\n                        label=\"Icon\"\n                        onChange={event => setIcon(event.target.value as string)}\n                    >\n                        {CategoryIcon.map((icon, key) => <MenuItem value={icon} key={key}><Icon\n                            color=\"primary\">{icon}</Icon></MenuItem>)}\n\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} color=\"primary\">\n                    Cancel\n                </Button>\n                <Button disabled={name === '' || icon === ''} onClick={onSave} variant=\"contained\" color=\"primary\">\n                    Add\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n    )\n}\nexport default AddCategoryModel\n","import {useHistory} from \"react-router-dom\";\nimport React, {useContext} from \"react\";\nimport {CategoryContext} from \"../context/categoryContext\";\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from \"@material-ui/core\";\nimport {Category} from \"../model/mode\";\n\ninterface DeleteModelPropsType {\n    open: boolean,\n    handleClose: () => void,\n    category: Category\n}\n\nconst DeleteModel :React.FC<DeleteModelPropsType>  = ({open, handleClose, category}) => {\n    const history = useHistory();\n    const {deleteById} = useContext(CategoryContext);\n\n    const onDelete = () => {\n        if (category.id) {\n            deleteById(category.id);\n            handleClose()\n        }\n        const path = `todo`;\n        history.push(path);\n    }\n\n    return (\n        <Dialog\n            open={open}\n            keepMounted\n            onClose={handleClose}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    Do you want to delete category: <strong>{category?.name}</strong>?\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose} variant='contained' color=\"primary\">\n                    Cancel\n                </Button>\n                <Button onClick={onDelete}>\n                    Ok\n                </Button>\n            </DialogActions>\n        </Dialog>\n\n    )\n}\nexport default DeleteModel\n","import React, {useContext, useState} from \"react\";\nimport {CategoryContext} from \"../context/categoryContext\";\nimport {Category} from \"../model/mode\";\nimport {\n    AppBar,\n    Divider,\n    Drawer,\n    Icon,\n    IconButton,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    Typography\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport {Link} from \"react-router-dom\";\nimport AddCategoryModel from \"../dialog/AddCategoryModel\";\nimport DeleteModel from \"../dialog/DeleteModel\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    addBtn: {\n        position: \"absolute\",\n        bottom: 0\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n}));\n\n\nconst NavBar = () => {\n    const classes = useStyles();\n    const {categories} = useContext(CategoryContext)\n    const [deleteModelOpen, setDeleteModelOpen] = useState(false);\n    const [deletingCategory, setDeletingCategory] = useState<Category>();\n    const [open, setOpen] = useState(false);\n    const [addModelOpen, setAddModelOpen] = useState(false);\n\n    return <>\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n                [classes.appBarShift]: open,\n            })}\n        >\n            <Toolbar>\n                <IconButton\n                    color=\"inherit\"\n                    aria-label=\"open drawer\"\n                    onClick={() => setOpen(true)}\n                    edge=\"start\"\n                    className={clsx(classes.menuButton, {\n                        [classes.hide]: open,\n                    })}\n                >\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" noWrap>\n                    TO DO\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n            })}\n            classes={{\n                paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                }),\n            }}\n        >\n\n            <div className={classes.toolbar}>\n                <IconButton onClick={() => setOpen(false)}>\n                    <ChevronLeftIcon/>\n                    {open && <Typography variant=\"h6\">\n                        Categories\n                    </Typography>}\n                </IconButton>\n            </div>\n            <Divider/>\n            <List>\n                {categories.map(({name, icon, id}, key) =>\n                    <ListItem button key={key} component={Link} to={`/todo?category=${id}`}\n                              onDoubleClick={() => {\n                                  setDeleteModelOpen(true);\n                                  setDeletingCategory({name, icon, id})\n                              }}>\n                        <ListItemIcon><Icon color=\"primary\">{icon}</Icon> </ListItemIcon>\n                        <ListItemText primary={name}/>\n                    </ListItem>\n                )}\n            </List>\n\n            <Divider/>\n            <ListItem className={classes.addBtn} button onClick={() => setAddModelOpen(true)}>\n                <ListItemIcon>\n                    <Icon color=\"primary\">add</Icon>\n                </ListItemIcon>\n                <ListItemText primary='Add'/>\n            </ListItem>\n\n        </Drawer>\n        <AddCategoryModel\n            handleClose={() => setAddModelOpen(false)}\n            open={addModelOpen}/>\n        {deletingCategory && <DeleteModel\n            category={deletingCategory}\n            handleClose={() => setDeleteModelOpen(false)}\n            open={deleteModelOpen}/>}\n    </>\n}\n\nexport default NavBar\n","import React from 'react';\nimport {CssBaseline, makeStyles} from \"@material-ui/core\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport TodoScreen from \"./TodoScreen\";\nimport NavBar from \"../common/NavBar\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nexport default function Home() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <div className={classes.root}>\n                <BrowserRouter>\n                    <Route path='/'>\n                        <CssBaseline/>\n                        <NavBar/>\n                        <main className={classes.content}>\n                            <div className={classes.toolbar}/>\n                            <TodoScreen/>\n                        </main>\n                    </Route>\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport TodoProvider from \"./context/todoContext\";\nimport CategoryProvider from \"./context/categoryContext\";\nimport Home from \"./screens/Home\";\n\nexport default function App() {\n    return (\n        <div>\n            <TodoProvider>\n                <CategoryProvider>\n                    <Home/>\n                </CategoryProvider>\n            </TodoProvider>\n        </div>\n    );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}